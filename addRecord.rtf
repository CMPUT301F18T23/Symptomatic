{\rtf1\ansi\ansicpg1252\cocoartf1561\cocoasubrtf600
{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;\f1\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;\red0\green116\blue0;\red255\green255\blue255;\red170\green13\blue145;
\red0\green0\blue0;\red28\green0\blue207;\red196\green26\blue22;\red14\green14\blue255;}
{\*\expandedcolortbl;;\csgenericrgb\c0\c45600\c0;\csgenericrgb\c100000\c100000\c100000;\csgenericrgb\c66500\c5200\c56900;
\csgenericrgb\c0\c0\c0;\csgenericrgb\c11000\c0\c81000;\csgenericrgb\c77000\c10200\c8600;\csgenericrgb\c5500\c5500\c100000;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab840
\pard\tx840\pardeftab840\pardirnatural\partightenfactor0

\f0\fs34 \cf2 \cb3 /*
\f1\fs24 \cf0 \cb3 \

\f0\fs34 \cf2 \cb3  * AddRecordActivity.java
\f1\fs24 \cf0 \cb3 \

\f0\fs34 \cf2 \cb3  *
\f1\fs24 \cf0 \cb3 \

\f0\fs34 \cf2 \cb3  * Version 1
\f1\fs24 \cf0 \cb3 \

\f0\fs34 \cf2 \cb3  *
\f1\fs24 \cf0 \cb3 \

\f0\fs34 \cf2 \cb3  * November, 20, 2018.
\f1\fs24 \cf0 \cb3 \

\f0\fs34 \cf2 \cb3  *
\f1\fs24 \cf0 \cb3 \

\f0\fs34 \cf2 \cb3  * This file is subject to the terms and conditions defined in
\f1\fs24 \cf0 \cb3 \

\f0\fs34 \cf2 \cb3  * file 'LICENSE', which is part of this source code package.
\f1\fs24 \cf0 \cb3 \

\f0\fs34 \cf2 \cb3  *
\f1\fs24 \cf0 \cb3 \

\f0\fs34 \cf2 \cb3  * Adds a user input record to database.
\f1\fs24 \cf0 \cb3 \

\f0\fs34 \cf2 \cb3  *
\f1\fs24 \cf0 \cb3 \

\f0\fs34 \cf2 \cb3  * Issues: Currently do not have the database linked.
\f1\fs24 \cf0 \cb3 \

\f0\fs34 \cf2 \cb3  *
\f1\fs24 \cf0 \cb3 \

\f0\fs34 \cf2 \cb3  */
\f1\fs24 \cf0 \cb3 \
\pard\tx840\pardeftab840\pardirnatural\partightenfactor0

\f0\fs34 \cf4 package\cf5  ca.ualberta.symptomaticapp;
\f1\fs24 \cf0 \
\

\f0\fs34 \cf4 import\cf5  android.app.AlertDialog;
\f1\fs24 \cf0 \

\f0\fs34 \cf4 import\cf5  android.app.DatePickerDialog;
\f1\fs24 \cf0 \

\f0\fs34 \cf4 import\cf5  android.content.Intent;
\f1\fs24 \cf0 \

\f0\fs34 \cf4 import\cf5  android.graphics.Bitmap;
\f1\fs24 \cf0 \

\f0\fs34 \cf4 import\cf5  android.graphics.BitmapFactory;
\f1\fs24 \cf0 \

\f0\fs34 \cf4 import\cf5  android.graphics.Color;
\f1\fs24 \cf0 \

\f0\fs34 \cf4 import\cf5  android.graphics.drawable.ColorDrawable;
\f1\fs24 \cf0 \

\f0\fs34 \cf4 import\cf5  android.net.Uri;
\f1\fs24 \cf0 \

\f0\fs34 \cf4 import\cf5  android.os.Environment;
\f1\fs24 \cf0 \

\f0\fs34 \cf4 import\cf5  android.provider.MediaStore;
\f1\fs24 \cf0 \

\f0\fs34 \cf4 import\cf5  android.support.annotation.NonNull;
\f1\fs24 \cf0 \

\f0\fs34 \cf4 import\cf5  android.support.v4.content.FileProvider;
\f1\fs24 \cf0 \

\f0\fs34 \cf4 import\cf5  android.support.v7.app.AppCompatActivity;
\f1\fs24 \cf0 \

\f0\fs34 \cf4 import\cf5  android.os.Bundle;
\f1\fs24 \cf0 \

\f0\fs34 \cf4 import\cf5  android.support.v7.widget.Toolbar;
\f1\fs24 \cf0 \

\f0\fs34 \cf4 import\cf5  android.util.Log;
\f1\fs24 \cf0 \

\f0\fs34 \cf4 import\cf5  android.view.Menu;
\f1\fs24 \cf0 \

\f0\fs34 \cf4 import\cf5  android.view.MenuInflater;
\f1\fs24 \cf0 \

\f0\fs34 \cf4 import\cf5  android.view.MenuItem;
\f1\fs24 \cf0 \

\f0\fs34 \cf4 import\cf5  android.view.View;
\f1\fs24 \cf0 \

\f0\fs34 \cf4 import\cf5  android.widget.ArrayAdapter;
\f1\fs24 \cf0 \

\f0\fs34 \cf4 import\cf5  android.widget.Button;
\f1\fs24 \cf0 \

\f0\fs34 \cf4 import\cf5  android.widget.DatePicker;
\f1\fs24 \cf0 \

\f0\fs34 \cf4 import\cf5  android.widget.ImageView;
\f1\fs24 \cf0 \

\f0\fs34 \cf4 import\cf5  android.widget.ListView;
\f1\fs24 \cf0 \

\f0\fs34 \cf4 import\cf5  android.widget.Spinner;
\f1\fs24 \cf0 \

\f0\fs34 \cf4 import\cf5  android.widget.TextView;
\f1\fs24 \cf0 \

\f0\fs34 \cf4 import\cf5  android.widget.Toast;
\f1\fs24 \cf0 \
\

\f0\fs34 \cf4 import\cf5  com.google.android.gms.maps.model.LatLng;
\f1\fs24 \cf0 \

\f0\fs34 \cf4 import\cf5  com.google.android.gms.tasks.OnCompleteListener;
\f1\fs24 \cf0 \

\f0\fs34 \cf4 import\cf5  com.google.android.gms.tasks.Task;
\f1\fs24 \cf0 \

\f0\fs34 \cf4 import\cf5  com.google.firebase.firestore.CollectionReference;
\f1\fs24 \cf0 \

\f0\fs34 \cf4 import\cf5  com.google.firebase.firestore.FirebaseFirestore;
\f1\fs24 \cf0 \

\f0\fs34 \cf4 import\cf5  com.google.firebase.firestore.Query;
\f1\fs24 \cf0 \

\f0\fs34 \cf4 import\cf5  com.google.firebase.firestore.QueryDocumentSnapshot;
\f1\fs24 \cf0 \

\f0\fs34 \cf4 import\cf5  com.google.firebase.firestore.QuerySnapshot;
\f1\fs24 \cf0 \
\

\f0\fs34 \cf4 import\cf5  java.io.ByteArrayOutputStream;
\f1\fs24 \cf0 \

\f0\fs34 \cf4 import\cf5  java.io.File;
\f1\fs24 \cf0 \

\f0\fs34 \cf4 import\cf5  java.io.IOException;
\f1\fs24 \cf0 \

\f0\fs34 \cf4 import\cf5  java.text.SimpleDateFormat;
\f1\fs24 \cf0 \

\f0\fs34 \cf4 import\cf5  java.util.ArrayList;
\f1\fs24 \cf0 \

\f0\fs34 \cf4 import\cf5  java.util.Calendar;
\f1\fs24 \cf0 \

\f0\fs34 \cf4 import\cf5  java.util.Collection;
\f1\fs24 \cf0 \

\f0\fs34 \cf4 import\cf5  java.util.Date;
\f1\fs24 \cf0 \
\

\f0\fs34 \cf4 public\cf5  \cf4 class\cf5  AddRecordActivity \cf4 extends\cf5  AppCompatActivity \{
\f1\fs24 \cf0 \

\f0\fs34 \cf5     \cf4 private\cf5  \cf4 static\cf5  \cf4 final\cf5  \cf4 int\cf5  PICK_IMAGE_REQUEST = \cf6 \cb3 100\cf5 \cb3 ; \cf2 \cb3 // to access the gallery to choose an image
\f1\fs24 \cf0 \cb3 \

\f0\fs34 \cf5     \cf4 static\cf5  \cf4 final\cf5  \cf4 int\cf5  REQUEST_IMAGE_CAPTURE = \cf6 \cb3 1\cf5 \cb3 ; \cf2 \cb3 // to access the camera to take an image
\f1\fs24 \cf0 \cb3 \

\f0\fs34 \cf5     \cf4 static\cf5  \cf4 final\cf5  \cf4 int\cf5  REQUEST_TAKE_PHOTO = \cf6 \cb3 1\cf5 \cb3 ;
\f1\fs24 \cf0 \

\f0\fs34 \cf5     \cf4 static\cf5  \cf4 final\cf5  \cf4 int\cf5  GET_POSITION = \cf6 \cb3 2\cf5 \cb3 ;
\f1\fs24 \cf0 \

\f0\fs34 \cf5     \cf4 private\cf5  ImageView iv;
\f1\fs24 \cf0 \

\f0\fs34 \cf5     \cf4 private\cf5  String ivId;
\f1\fs24 \cf0 \

\f0\fs34 \cf5     \cf4 private\cf5  \cf4 int\cf5  photoCounter;
\f1\fs24 \cf0 \
\
\

\f0\fs34 \cf5     Bitmap bmp;
\f1\fs24 \cf0 \
\

\f0\fs34 \cf5     \cf4 byte\cf5 [] byteArray;
\f1\fs24 \cf0 \
\

\f0\fs34 \cf5     PhotoList photoList = \cf4 new\cf5  PhotoList();
\f1\fs24 \cf0 \
\

\f0\fs34 \cf5     String mCurrentPhotoPath; \cf2 \cb3 // the photo's file path
\f1\fs24 \cf0 \cb3 \
\

\f0\fs34 \cf5     Problem problem;
\f1\fs24 \cf0 \

\f0\fs34 \cf5     \cf4 int\cf5  year;
\f1\fs24 \cf0 \

\f0\fs34 \cf5     \cf4 int\cf5  month;
\f1\fs24 \cf0 \

\f0\fs34 \cf5     \cf4 int\cf5  day;
\f1\fs24 \cf0 \

\f0\fs34 \cf5     \cf4 private\cf5  DatePickerDialog.OnDateSetListener DateSetListener;
\f1\fs24 \cf0 \

\f0\fs34 \cf5     \cf4 boolean\cf5  selectedDateDone;
\f1\fs24 \cf0 \
\

\f0\fs34 \cf5     \cf4 private\cf5  LatLng latLng;
\f1\fs24 \cf0 \
\
\

\f0\fs34 \cf5     @Override
\f1\fs24 \cf0 \

\f0\fs34 \cf5     \cf4 protected\cf5  \cf4 void\cf5  onCreate(Bundle savedInstanceState) \{
\f1\fs24 \cf0 \

\f0\fs34 \cf5         \cf4 super\cf5 .onCreate(savedInstanceState);
\f1\fs24 \cf0 \

\f0\fs34 \cf5         setContentView(R.layout.activity_add_record);
\f1\fs24 \cf0 \

\f0\fs34 \cf5         Toolbar toolbar = findViewById(R.id.addRecord_toolbar);
\f1\fs24 \cf0 \

\f0\fs34 \cf5         setSupportActionBar(toolbar);
\f1\fs24 \cf0 \

\f0\fs34 \cf5         getSupportActionBar().setTitle(\cf7 "Add Record"\cf5 );
\f1\fs24 \cf0 \

\f0\fs34 \cf5         \cf4 final\cf5  Calendar cal = Calendar.getInstance();
\f1\fs24 \cf0 \
\pard\tx840\pardeftab840\pardirnatural\partightenfactor0

\f0\fs34 \cf2 \cb3 //        ListView photoListView = findViewById(R.id.photoListView);
\f1\fs24 \cf0 \cb3 \
\
\
\pard\tx840\pardeftab840\pardirnatural\partightenfactor0

\f0\fs34 \cf5         problem = (Problem) getIntent().getSerializableExtra(\cf7 "problem"\cf5 );
\f1\fs24 \cf0 \
\

\f0\fs34 \cf5         TextView textView = findViewById(R.id.InputProblemTextView);
\f1\fs24 \cf0 \

\f0\fs34 \cf5         textView.setText(problem.getTitle());
\f1\fs24 \cf0 \
\

\f0\fs34 \cf5         year = cal.get(Calendar.YEAR);
\f1\fs24 \cf0 \

\f0\fs34 \cf5         month = cal.get(Calendar.MONTH);
\f1\fs24 \cf0 \

\f0\fs34 \cf5         day = cal.get(Calendar.DAY_OF_MONTH);
\f1\fs24 \cf0 \
\

\f0\fs34 \cf5         selectedDateDone = \cf4 false\cf5 ;
\f1\fs24 \cf0 \
\
\

\f0\fs34 \cf5         Button dateButton = findViewById(R.id.changeDateButton);
\f1\fs24 \cf0 \

\f0\fs34 \cf5         dateButton.setOnClickListener(\cf4 new\cf5  View.OnClickListener() \{
\f1\fs24 \cf0 \

\f0\fs34 \cf5             @Override
\f1\fs24 \cf0 \

\f0\fs34 \cf5             \cf4 public\cf5  \cf4 void\cf5  onClick(View v) \{
\f1\fs24 \cf0 \

\f0\fs34 \cf5                 \cf4 int\cf5  currentYear = cal.get(Calendar.YEAR);
\f1\fs24 \cf0 \

\f0\fs34 \cf5                 \cf4 int\cf5  currentMonth = cal.get(Calendar.MONTH);
\f1\fs24 \cf0 \

\f0\fs34 \cf5                 \cf4 int\cf5  currentDay = cal.get(Calendar.DAY_OF_MONTH);
\f1\fs24 \cf0 \
\

\f0\fs34 \cf5                 DatePickerDialog dialog = \cf4 new\cf5  DatePickerDialog(AddRecordActivity.\cf4 this\cf5 , android.R.style.Theme_DeviceDefault_Dialog, DateSetListener, currentYear, currentMonth, currentDay);
\f1\fs24 \cf0 \

\f0\fs34 \cf5                 dialog.getWindow().setBackgroundDrawable(\cf4 new\cf5  ColorDrawable(Color.BLACK));
\f1\fs24 \cf0 \

\f0\fs34 \cf5                 dialog.show();
\f1\fs24 \cf0 \

\f0\fs34 \cf5             \}
\f1\fs24 \cf0 \

\f0\fs34 \cf5         \});
\f1\fs24 \cf0 \
\

\f0\fs34 \cf5         DateSetListener = \cf4 new\cf5  DatePickerDialog.OnDateSetListener() \{
\f1\fs24 \cf0 \

\f0\fs34 \cf5             @Override
\f1\fs24 \cf0 \

\f0\fs34 \cf5             \cf4 public\cf5  \cf4 void\cf5  onDateSet(DatePicker view, \cf4 int\cf5  chosenYear, \cf4 int\cf5  chosenMonth, \cf4 int\cf5  chosenDay) \{
\f1\fs24 \cf0 \

\f0\fs34 \cf5                 year = chosenYear;
\f1\fs24 \cf0 \

\f0\fs34 \cf5                 month = chosenMonth;
\f1\fs24 \cf0 \

\f0\fs34 \cf5                 day = chosenDay;
\f1\fs24 \cf0 \

\f0\fs34 \cf5             \}
\f1\fs24 \cf0 \

\f0\fs34 \cf5         \};
\f1\fs24 \cf0 \
\

\f0\fs34 \cf5         Button mapButton = findViewById(R.id.mapButton);
\f1\fs24 \cf0 \

\f0\fs34 \cf5         mapButton.setOnClickListener(\cf4 new\cf5  View.OnClickListener() \{
\f1\fs24 \cf0 \

\f0\fs34 \cf5             @Override
\f1\fs24 \cf0 \

\f0\fs34 \cf5             \cf4 public\cf5  \cf4 void\cf5  onClick(View v) \{
\f1\fs24 \cf0 \

\f0\fs34 \cf5                 Intent intent = \cf4 new\cf5  Intent(AddRecordActivity.\cf4 this\cf5 , MapsActivity.\cf4 class\cf5 );
\f1\fs24 \cf0 \

\f0\fs34 \cf5                 startActivityForResult(intent, GET_POSITION);
\f1\fs24 \cf0 \
\

\f0\fs34 \cf5             \}
\f1\fs24 \cf0 \

\f0\fs34 \cf5         \});
\f1\fs24 \cf0 \
\
\
\

\f0\fs34 \cf5         \cf2 \cb3 //todo: show the chosen date
\f1\fs24 \cf0 \cb3 \

\f0\fs34 \cf5         \cf4 final\cf5  Button savedPhoto = findViewById(R.id.savedPhoto);
\f1\fs24 \cf0 \

\f0\fs34 \cf5         \cf4 final\cf5  Button takePhoto = findViewById(R.id.takePhoto);
\f1\fs24 \cf0 \

\f0\fs34 \cf5         iv = (ImageView) findViewById(R.id.iv);
\f1\fs24 \cf0 \
\

\f0\fs34 \cf5         savedPhoto.setOnClickListener(\cf4 new\cf5  View.OnClickListener() \{
\f1\fs24 \cf0 \

\f0\fs34 \cf5             @Override
\f1\fs24 \cf0 \

\f0\fs34 \cf5             \cf4 public\cf5  \cf4 void\cf5  onClick(View v) \{
\f1\fs24 \cf0 \

\f0\fs34 \cf5                 Intent intent = \cf4 new\cf5  Intent(Intent.ACTION_GET_CONTENT);
\f1\fs24 \cf0 \

\f0\fs34 \cf5                 intent.setType(\cf7 "image/*"\cf5 );
\f1\fs24 \cf0 \

\f0\fs34 \cf5                 startActivityForResult(intent, PICK_IMAGE_REQUEST);
\f1\fs24 \cf0 \
\

\f0\fs34 \cf5             \}
\f1\fs24 \cf0 \
\

\f0\fs34 \cf5         \});
\f1\fs24 \cf0 \
\

\f0\fs34 \cf5         takePhoto.setOnClickListener(\cf4 new\cf5  View.OnClickListener() \{
\f1\fs24 \cf0 \

\f0\fs34 \cf5             @Override
\f1\fs24 \cf0 \

\f0\fs34 \cf5             \cf4 public\cf5  \cf4 void\cf5  onClick(View v) \{
\f1\fs24 \cf0 \

\f0\fs34 \cf5                 \cf2 \cb3 // Start the intent to take the photo
\f1\fs24 \cf0 \cb3 \

\f0\fs34 \cf5                 Intent takePictureintent = \cf4 new\cf5  Intent(android.provider.MediaStore.ACTION_IMAGE_CAPTURE);
\f1\fs24 \cf0 \
\

\f0\fs34 \cf5                 \cf2 \cb3 // Create the name of the file for the photo
\f1\fs24 \cf0 \cb3 \

\f0\fs34 \cf5                 \cf4 try\cf5  \{
\f1\fs24 \cf0 \

\f0\fs34 \cf5                     File photoDir = createImageFile();
\f1\fs24 \cf0 \

\f0\fs34 \cf5                     \cf2 \cb3 // for testing: Print the photo's path
\f1\fs24 \cf0 \cb3 \

\f0\fs34 \cf5                     Log.d(\cf7 "Photo Directory:"\cf5 , mCurrentPhotoPath);
\f1\fs24 \cf0 \

\f0\fs34 \cf5                 \} \cf4 catch\cf5  (IOException e) \{
\f1\fs24 \cf0 \

\f0\fs34 \cf5                     e.printStackTrace();
\f1\fs24 \cf0 \

\f0\fs34 \cf5                 \}
\f1\fs24 \cf0 \
\

\f0\fs34 \cf5                 \cf2 \cb3 // Start the camera for the photo to be taken
\f1\fs24 \cf0 \cb3 \

\f0\fs34 \cf5                 startActivityForResult(takePictureintent, REQUEST_IMAGE_CAPTURE);
\f1\fs24 \cf0 \
\

\f0\fs34 \cf5             \}
\f1\fs24 \cf0 \

\f0\fs34 \cf5         \});
\f1\fs24 \cf0 \
\
\

\f0\fs34 \cf5         Button saveRecordBttn = findViewById(R.id.saveRecordBttn);
\f1\fs24 \cf0 \
\

\f0\fs34 \cf5         saveRecordBttn.setOnClickListener(\cf4 new\cf5  View.OnClickListener() \{
\f1\fs24 \cf0 \

\f0\fs34 \cf5             @Override
\f1\fs24 \cf0 \

\f0\fs34 \cf5             \cf4 public\cf5  \cf4 void\cf5  onClick(View v) \{
\f1\fs24 \cf0 \

\f0\fs34 \cf5                 \cf4 boolean\cf5  goodRecord = \cf4 true\cf5 ;
\f1\fs24 \cf0 \

\f0\fs34 \cf5                 \cf2 \cb3 // If the record's date is not given
\f1\fs24 \cf0 \cb3 \

\f0\fs34 \cf5                 \cf2 \cb3 // TODO: selectedDateDone is always true for some reason...
\f1\fs24 \cf0 \cb3 \

\f0\fs34 \cf5                 \cf4 if\cf5  (selectedDateDone) \{
\f1\fs24 \cf0 \

\f0\fs34 \cf5                     AlertDialog.Builder noDescriptionDialog = \cf4 new\cf5  AlertDialog.Builder(AddRecordActivity.\cf4 this\cf5 );
\f1\fs24 \cf0 \

\f0\fs34 \cf5                     noDescriptionDialog.setMessage(\cf7 "A date must be inputted"\cf5 );
\f1\fs24 \cf0 \

\f0\fs34 \cf5                     noDescriptionDialog.show();
\f1\fs24 \cf0 \

\f0\fs34 \cf5                     goodRecord = \cf4 false\cf5 ;
\f1\fs24 \cf0 \

\f0\fs34 \cf5                 \}
\f1\fs24 \cf0 \

\f0\fs34 \cf5                 \cf2 \cb3 // When the required information to create a record is filled out
\f1\fs24 \cf0 \cb3 \

\f0\fs34 \cf5                 \cf4 if\cf5  (goodRecord) \{
\f1\fs24 \cf0 \

\f0\fs34 \cf5                     \cf2 \cb3 // Prepare the attributes required to instantiate the Record class
\f1\fs24 \cf0 \cb3 \

\f0\fs34 \cf5                     RecordList currProblemRecordList = problem.getRecordList();
\f1\fs24 \cf0 \

\f0\fs34 \cf5                     String currProbName = problem.getTitle();
\f1\fs24 \cf0 \

\f0\fs34 \cf5                     Date currDate = Calendar.getInstance().getTime();
\f1\fs24 \cf0 \
\

\f0\fs34 \cf5                     \cf2 \cb3 // Create the new record
\f1\fs24 \cf0 \cb3 \

\f0\fs34 \cf5                     Record currRecord = \cf4 new\cf5  Record(currProbName, currDate);
\f1\fs24 \cf0 \

\f0\fs34 \cf5                     Record.addRecToDb(currRecord);
\f1\fs24 \cf0 \
\

\f0\fs34 \cf5                     \cf2 \cb3 // Add it to the problem's recordList
\f1\fs24 \cf0 \cb3 \

\f0\fs34 \cf5                     \cf2 \cb3 // currProblemRecordList.addRecord(currRecord);
\f1\fs24 \cf0 \cb3 \

\f0\fs34 \cf5                     \cf2 \cb3 //Log.d("Problem's Record List", problem.getRecordList().toString());
\f1\fs24 \cf0 \cb3 \
\

\f0\fs34 \cf5                     \cf2 \cb3 // Switch back to the previous activity
\f1\fs24 \cf0 \cb3 \

\f0\fs34 \cf5                     Intent intent = \cf4 new\cf5  Intent(AddRecordActivity.\cf4 this\cf5 , ListProblemsActivity.\cf4 class\cf5 );
\f1\fs24 \cf0 \

\f0\fs34 \cf5                     startActivity(intent);
\f1\fs24 \cf0 \

\f0\fs34 \cf5                 \}
\f1\fs24 \cf0 \
\

\f0\fs34 \cf5             \}
\f1\fs24 \cf0 \

\f0\fs34 \cf5         \});
\f1\fs24 \cf0 \
\

\f0\fs34 \cf5     \}
\f1\fs24 \cf0 \
\
\

\f0\fs34 \cf5     @Override
\f1\fs24 \cf0 \

\f0\fs34 \cf5     \cf4 public\cf5  \cf4 boolean\cf5  onCreateOptionsMenu(Menu menu) \{
\f1\fs24 \cf0 \

\f0\fs34 \cf5         MenuInflater inflater = getMenuInflater();
\f1\fs24 \cf0 \

\f0\fs34 \cf5         inflater.inflate(R.menu.add_record_menu, menu);
\f1\fs24 \cf0 \

\f0\fs34 \cf5         \cf4 return\cf5  \cf4 true\cf5 ;
\f1\fs24 \cf0 \

\f0\fs34 \cf5     \}
\f1\fs24 \cf0 \
\

\f0\fs34 \cf5     \cf4 public\cf5  \cf4 void\cf5  viewHome(MenuItem menu) \{
\f1\fs24 \cf0 \

\f0\fs34 \cf5         Intent intent = \cf4 new\cf5  Intent(AddRecordActivity.\cf4 this\cf5 , AddProblemActivity.\cf4 class\cf5 );
\f1\fs24 \cf0 \

\f0\fs34 \cf5         startActivity(intent);
\f1\fs24 \cf0 \

\f0\fs34 \cf5     \}
\f1\fs24 \cf0 \
\

\f0\fs34 \cf5     \cf4 public\cf5  \cf4 void\cf5  viewViewProblems(MenuItem menu) \{
\f1\fs24 \cf0 \

\f0\fs34 \cf5         Intent intent = \cf4 new\cf5  Intent(AddRecordActivity.\cf4 this\cf5 , ListProblemsActivity.\cf4 class\cf5 );
\f1\fs24 \cf0 \

\f0\fs34 \cf5         startActivity(intent);
\f1\fs24 \cf0 \

\f0\fs34 \cf5     \}
\f1\fs24 \cf0 \
\

\f0\fs34 \cf5     \cf4 public\cf5  \cf4 void\cf5  viewAddProblem(MenuItem menu) \{
\f1\fs24 \cf0 \

\f0\fs34 \cf5         Intent intent = \cf4 new\cf5  Intent(AddRecordActivity.\cf4 this\cf5 , AddProblemActivity.\cf4 class\cf5 );
\f1\fs24 \cf0 \

\f0\fs34 \cf5         startActivity(intent);
\f1\fs24 \cf0 \

\f0\fs34 \cf5     \}
\f1\fs24 \cf0 \
\

\f0\fs34 \cf5     \cf4 public\cf5  \cf4 void\cf5  viewLogout(MenuItem menu) \{
\f1\fs24 \cf0 \

\f0\fs34 \cf5         Login.thisCaregiver = \cf4 null\cf5 ;
\f1\fs24 \cf0 \

\f0\fs34 \cf5         Login.thisUser = \cf4 null\cf5 ;
\f1\fs24 \cf0 \

\f0\fs34 \cf5         Intent intent = \cf4 new\cf5  Intent(AddRecordActivity.\cf4 this\cf5 , MainActivity.\cf4 class\cf5 );
\f1\fs24 \cf0 \

\f0\fs34 \cf5         startActivity(intent);
\f1\fs24 \cf0 \

\f0\fs34 \cf5     \}
\f1\fs24 \cf0 \
\
\

\f0\fs34 \cf5     @Override
\f1\fs24 \cf0 \

\f0\fs34 \cf5     \cf4 protected\cf5  \cf4 void\cf5  onActivityResult(\cf4 int\cf5  requestCode, \cf4 int\cf5  resultCode, Intent data) \{
\f1\fs24 \cf0 \

\f0\fs34 \cf5         \cf4 switch\cf5  (requestCode) \{
\f1\fs24 \cf0 \
\

\f0\fs34 \cf5             \cf2 \cb3 // If selecting a photo from gallery
\f1\fs24 \cf0 \cb3 \

\f0\fs34 \cf5             \cf4 case\cf5  PICK_IMAGE_REQUEST:
\f1\fs24 \cf0 \

\f0\fs34 \cf5                 \cf4 if\cf5  (resultCode == RESULT_OK) \{
\f1\fs24 \cf0 \

\f0\fs34 \cf5                     Uri selectedImage = data.getData();
\f1\fs24 \cf0 \

\f0\fs34 \cf5                     \cf4 try\cf5  \{
\f1\fs24 \cf0 \

\f0\fs34 \cf5                         \cf2 \cb3 // Convert the photo selected from gallery into a bitmap and display it
\f1\fs24 \cf0 \cb3 \

\f0\fs34 \cf5                         bmp = MediaStore.Images.Media.getBitmap(getContentResolver(), selectedImage);
\f1\fs24 \cf0 \
\pard\tx840\pardeftab840\pardirnatural\partightenfactor0

\f0\fs34 \cf2 \cb3 //                        iv.setImageBitmap(bmp);
\f1\fs24 \cf0 \cb3 \
\
\pard\tx840\pardeftab840\pardirnatural\partightenfactor0

\f0\fs34 \cf5                     \} \cf4 catch\cf5  (IOException e) \{
\f1\fs24 \cf0 \

\f0\fs34 \cf5                         e.printStackTrace();
\f1\fs24 \cf0 \

\f0\fs34 \cf5                     \}
\f1\fs24 \cf0 \
\

\f0\fs34 \cf5                     \cf2 \cb3 // Create an instance of the Photo class
\f1\fs24 \cf0 \cb3 \

\f0\fs34 \cf5                     Photo photo = \cf4 new\cf5  Photo(bmp);
\f1\fs24 \cf0 \
\

\f0\fs34 \cf5                     \cf2 \cb3 // Add the photo selected from gallery onto the photoList
\f1\fs24 \cf0 \cb3 \

\f0\fs34 \cf5                     photoList.addPhoto(photo);
\f1\fs24 \cf0 \
\
\pard\tx840\pardeftab840\pardirnatural\partightenfactor0

\f0\fs34 \cf2 \cb3 //                    If we want to use the bitmap from the Photo class
\f1\fs24 \cf0 \cb3 \
\pard\tx840\pardeftab840\pardirnatural\partightenfactor0

\f0\fs34 \cf5                     Bitmap image = photo.getPhotoBitmap();
\f1\fs24 \cf0 \

\f0\fs34 \cf5                     iv.setImageBitmap(image);
\f1\fs24 \cf0 \

\f0\fs34 \cf5                     incrementPhotoCounter();
\f1\fs24 \cf0 \

\f0\fs34 \cf5                 \}
\f1\fs24 \cf0 \

\f0\fs34 \cf5                 \cf4 break\cf5 ;
\f1\fs24 \cf0 \
\

\f0\fs34 \cf5             \cf4 case\cf5  REQUEST_IMAGE_CAPTURE:
\f1\fs24 \cf0 \

\f0\fs34 \cf5                 \cf2 \cb3 // If capturing a photo using the camera
\f1\fs24 \cf0 \cb3 \

\f0\fs34 \cf5                 \cf4 if\cf5  (resultCode == RESULT_OK) \{
\f1\fs24 \cf0 \

\f0\fs34 \cf5                     \cf2 \cb3 // Do try and catch
\f1\fs24 \cf0 \cb3 \

\f0\fs34 \cf5                     \cf4 try\cf5  \{
\f1\fs24 \cf0 \

\f0\fs34 \cf5                         \cf2 \cb3 // Convert the photo captured into a bitmap
\f1\fs24 \cf0 \cb3 \

\f0\fs34 \cf5                         Bitmap bitmap = (Bitmap) data.getExtras().get(\cf7 "data"\cf5 );
\f1\fs24 \cf0 \
\

\f0\fs34 \cf5                         \cf2 \cb3 // Display the bitmap in the ImageView
\f1\fs24 \cf0 \cb3 \

\f0\fs34 \cf5                         iv.setImageBitmap(bitmap);
\f1\fs24 \cf0 \
\

\f0\fs34 \cf5                         \cf2 \cb3 // Store the image as a Photo object
\f1\fs24 \cf0 \cb3 \

\f0\fs34 \cf5                         Photo photo = \cf4 new\cf5  Photo(bitmap);
\f1\fs24 \cf0 \
\

\f0\fs34 \cf5                         \cf2 \cb3 // Add the new Photo object into the photoList
\f1\fs24 \cf0 \cb3 \

\f0\fs34 \cf5                         photoList.addPhoto(photo);
\f1\fs24 \cf0 \

\f0\fs34 \cf5                         incrementPhotoCounter();
\f1\fs24 \cf0 \

\f0\fs34 \cf5                     \} \cf4 catch\cf5  (Exception e) \{
\f1\fs24 \cf0 \

\f0\fs34 \cf5                         Log.d(\cf7 "ERROR"\cf5 , \cf7 "Captured photo could not be created."\cf5 );
\f1\fs24 \cf0 \

\f0\fs34 \cf5                     \}
\f1\fs24 \cf0 \
\
\

\f0\fs34 \cf5                 \}
\f1\fs24 \cf0 \

\f0\fs34 \cf5                 \cf4 break\cf5 ;
\f1\fs24 \cf0 \
\

\f0\fs34 \cf5             \cf4 case\cf5  GET_POSITION:
\f1\fs24 \cf0 \
\

\f0\fs34 \cf5                 \cf4 if\cf5  (resultCode == RESULT_OK) \{
\f1\fs24 \cf0 \

\f0\fs34 \cf5                     latLng = data.getExtras().getParcelable(\cf7 "position"\cf5 );
\f1\fs24 \cf0 \

\f0\fs34 \cf5                     Toast.makeText(\cf4 this\cf5 , latLng.toString(), Toast.LENGTH_SHORT).show();
\f1\fs24 \cf0 \

\f0\fs34 \cf5                 \}
\f1\fs24 \cf0 \
\

\f0\fs34 \cf5         \}
\f1\fs24 \cf0 \

\f0\fs34 \cf5     \}
\f1\fs24 \cf0 \
\

\f0\fs34 \cf5     \cf2 \cb3 // Reference: \cf8 \cb3 https://developer.android.com/training/camera/photobasics#java
\f1\fs24 \cf0 \

\f0\fs34 \cf5     \cf4 private\cf5  File createImageFile() \cf4 throws\cf5  IOException \{
\f1\fs24 \cf0 \

\f0\fs34 \cf5         \cf2 \cb3 // Create the image file name with its timestamp
\f1\fs24 \cf0 \cb3 \

\f0\fs34 \cf5         String timeStamp = \cf4 new\cf5  SimpleDateFormat(\cf7 "yyyyMMdd_HHmmss"\cf5 ).format(\cf4 new\cf5  Date());
\f1\fs24 \cf0 \

\f0\fs34 \cf5         String photoFileName = \cf7 "JPEG_"\cf5  + timeStamp + \cf7 "_"\cf5 ;
\f1\fs24 \cf0 \
\

\f0\fs34 \cf5         \cf2 \cb3 // Get the app's directory for photos
\f1\fs24 \cf0 \cb3 \

\f0\fs34 \cf5         File picturesDir = getExternalFilesDir(Environment.DIRECTORY_PICTURES);
\f1\fs24 \cf0 \
\

\f0\fs34 \cf5         \cf2 \cb3 // Create the file
\f1\fs24 \cf0 \cb3 \

\f0\fs34 \cf5         File photo = File.createTempFile(
\f1\fs24 \cf0 \

\f0\fs34 \cf5                 photoFileName,  \cf2 \cb3 /* prefix */
\f1\fs24 \cf0 \cb3 \

\f0\fs34 \cf5                 \cf7 ".jpg"\cf5 ,         \cf2 \cb3 /* suffix */
\f1\fs24 \cf0 \cb3 \

\f0\fs34 \cf5                 picturesDir      \cf2 \cb3 /* directory */
\f1\fs24 \cf0 \cb3 \

\f0\fs34 \cf5         );
\f1\fs24 \cf0 \
\

\f0\fs34 \cf5         \cf2 \cb3 // Store the photo's path name and return the image File
\f1\fs24 \cf0 \cb3 \

\f0\fs34 \cf5         mCurrentPhotoPath = photo.getAbsolutePath();
\f1\fs24 \cf0 \

\f0\fs34 \cf5         \cf4 return\cf5  photo;
\f1\fs24 \cf0 \

\f0\fs34 \cf5     \}
\f1\fs24 \cf0 \
\

\f0\fs34 \cf5     \cf4 private\cf5  \cf4 void\cf5  incrementPhotoCounter() \{
\f1\fs24 \cf0 \

\f0\fs34 \cf5         photoCounter += \cf6 \cb3 1\cf5 \cb3 ;
\f1\fs24 \cf0 \
\pard\tx840\pardeftab840\pardirnatural\partightenfactor0

\f0\fs34 \cf2 \cb3 //        ivId = "photo" + photoCounter;
\f1\fs24 \cf0 \cb3 \

\f0\fs34 \cf2 \cb3 //        iv = (ImageView) findViewById(R.id.ivId);
\f1\fs24 \cf0 \cb3 \

\f0\fs34 \cf2 \cb3 //        Collection<Photo> photos = photoList.getPhotos();
\f1\fs24 \cf0 \cb3 \

\f0\fs34 \cf2 \cb3 //        for (Photo currPhoto : photos) \{
\f1\fs24 \cf0 \cb3 \

\f0\fs34 \cf2 \cb3 //            photoListView.
\f1\fs24 \cf0 \cb3 \

\f0\fs34 \cf2 \cb3 //            //Use variable
\f1\fs24 \cf0 \cb3 \

\f0\fs34 \cf2 \cb3 ////            Log.d("Added another photo!", "lol");
\f1\fs24 \cf0 \cb3 \

\f0\fs34 \cf2 \cb3 //            Log.d("Timestamp for Photo", currPhoto.getTimestamp());
\f1\fs24 \cf0 \cb3 \

\f0\fs34 \cf2 \cb3 //
\f1\fs24 \cf0 \cb3 \

\f0\fs34 \cf2 \cb3 //        \}
\f1\fs24 \cf0 \cb3 \
\
\
\pard\tx840\pardeftab840\pardirnatural\partightenfactor0

\f0\fs34 \cf5     \}
\f1\fs24 \cf0 \

\f0\fs34 \cf5 \}
\f1\fs24 \cf0 \
\
\
\
\
}